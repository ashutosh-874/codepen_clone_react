{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setopen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","sethtml","css","setcss","js","setjs","srcDoc","setsrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAoDeA,MA1Cf,SAAgBC,GAAQ,IAGhBC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SANe,EASKC,oBAAS,GATd,mBASZC,EATY,KASNC,EATM,KAcnB,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBACIO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHxC,SAKI,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGtD,cAAC,aAAD,CACIC,eAhBZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAgBDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,SCzClB,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAD4B,EAG/BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAV8C,mBAGlDvB,EAHkD,KAG3C8B,EAH2C,KAkBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAChD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GC2CFI,MA7Df,WAAgB,IAAD,EAGWb,EAAgB,OAAQ,IAHnC,mBAGNc,EAHM,KAGAC,EAHA,OAISf,EAAgB,MAAO,IAJhC,mBAINgB,EAJM,KAIDC,EAJC,OAKOjB,EAAgB,KAAM,IAL7B,mBAKNkB,EALM,KAKFC,EALE,OAMetC,mBAAS,IANxB,mBAMNuC,EANM,KAMEC,EANF,KAwBb,OAhBAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,6BAAD,OAEJP,EAFI,iCAGHE,EAHG,mCAIFE,EAJE,oCAOR,KAEN,OAAO,kBAAMM,aAAaF,MACtB,CAACR,EAAME,EAAKE,IAKb,qCACE,sBAAKlC,UAAU,gBAAf,UACA,cAAC,EAAD,CACIP,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAEZ,cAAC,EAAD,CACEtC,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IAEZ,cAAC,EAAD,CACExC,SAAS,aACTC,YAAY,KACZC,MAAOuC,EACPtC,SAAUuC,OAId,qBAAKnC,UAAU,OAAf,SACE,wBACAoC,OAAUA,EACVK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eCrDfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.48f5af8f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Editor(props) {\r\n\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props\r\n\r\n    const [open, setopen] = useState(true)\r\n\r\n    function handleChange(editor, data, value) { \r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => setopen(prevOpen => !prevOpen)}\r\n                    >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Editor from \"./Editor\";\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  \n\n  const [html, sethtml] = useLocalStorage('html', '')\n  const [css, setcss] = useLocalStorage('css', '')\n  const [js, setjs] = useLocalStorage('js', '')\n  const [srcDoc, setsrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setsrcDoc(`\n\t\t<html>\n\t\t\t<body>${html}</body>\n\t\t\t<style>${css}</style>\n\t\t\t<script>${js}</script>\n\t\t</html>\n    `)\n    }, 250)\n\n\treturn () => clearTimeout(timeout)\n  }, [html, css, js])\n\n\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n      <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={sethtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setcss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setjs}\n        />\n      </div>\n\n      <div className=\"pane\">\n        <iframe  \n        srcDoc = {srcDoc}\n        title=\"output\"\n        sandbox=\"allow-scripts\"\n        frameBorder=\"0\"\n        width=\"100%\"\n        height=\"100%\"\t\n      />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}